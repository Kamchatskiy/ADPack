name: safeline

services:
  mgt:
    # !!!
    ports:
      - 20002:1443

    container_name: safeline-mgt
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-mgt-g:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR}/safeline/resources/mgt:/app/data
      - ${DATA_DIR}/safeline/logs/nginx:/app/log/nginx:z
      - ${DATA_DIR}/safeline/resources/sock:/app/sock
      - /var/run:/app/run
    healthcheck:
      test: curl -k -f https://localhost:1443/api/open/health
    environment:
      - MGT_PG=postgres://safeline-ce:${PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    depends_on:
      - postgres
      - fvm
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.4

  postgres:
    container_name: safeline-pg
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-postgres:15.2
    volumes:
      - ${DATA_DIR}/safeline/resources/postgres/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=safeline-ce
      - POSTGRES_PASSWORD=${PASSWORD}
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.2
    command: [postgres, -c, max_connections=600]
    healthcheck:
      test: pg_isready -U safeline-ce -d safeline-ce

  detect:
    container_name: safeline-detector
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-detector-g:latest
    volumes:
      - ${DATA_DIR}/safeline/resources/detector:/resources/detector
      - ${DATA_DIR}/safeline/logs/detector:/logs/detector
      - /etc/localtime:/etc/localtime:ro
    environment:
      - LOG_DIR=/logs/detector
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.5

  tengine:
    container_name: safeline-tengine
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-tengine-g:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/resolv.conf:/etc/resolv.conf:ro
      - ${DATA_DIR}/safeline/resources/nginx:/etc/nginx
      - ${DATA_DIR}/safeline/resources/detector:/resources/detector
      - ${DATA_DIR}/safeline/resources/chaos:/resources/chaos
      - ${DATA_DIR}/safeline/logs/nginx:/var/log/nginx:z
      - ${DATA_DIR}/safeline/resources/cache:/usr/local/nginx/cache
      - ${DATA_DIR}/safeline/resources/sock:/app/sock
    environment:
      - TCD_MGT_API=https://${SUBNET_PREFIX}.4:1443/api/open/publish/server
      - TCD_SNSERVER=${SUBNET_PREFIX}.5:8000
      # deprecated
      - SNSERVER_ADDR=${SUBNET_PREFIX}.5:8000
    ulimits:
      nofile: 131072
    network_mode: host

  luigi:
    container_name: safeline-luigi
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-luigi-g:latest
    environment:
      - MGT_IP=${SUBNET_PREFIX}.4
      - LUIGI_PG=postgres://safeline-ce:${PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR}/safeline/resources/luigi:/app/data
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    depends_on:
      - detect
      - mgt
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.7

  fvm:
    container_name: safeline-fvm
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-fvm-g:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.8

  chaos:
    container_name: safeline-chaos
    restart: always
    profiles:
      - safeline
      - all
    image: ${IMAGE_PREFIX}/safeline-chaos-g:latest
    logging:
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - ${DATA_DIR}/safeline/resources/chaos:/app/chaos
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.10

volumes:
  main_data:

networks:
  safeline-ce:
    name: safeline-ce
    driver: bridge
    ipam:
      driver: default
      config:
        - gateway: ${SUBNET_PREFIX:?SUBNET_PREFIX required}.1
          subnet: ${SUBNET_PREFIX}.0/24
    driver_opts:
      com.docker.network.bridge.name: safeline-ce
