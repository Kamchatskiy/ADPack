name: packmate

services:
  packmate-app:
    container_name: packmate-app
    restart: always
    profiles:
      - packmate
      - all
    depends_on:
      packmate-db:
        condition: service_healthy
    image: ${PACKMATE_IMAGE:-registry.gitlab.com/packmate/packmate:latest}
    environment:
      WEB_LOGIN: ${USER:-}
      WEB_PASSWORD: ${PASSWORD:-}
      DB_PASSWORD: ${PASSWORD:-}
      INTERFACE: ${NET_INTERFACE}
      LOCAL_IP: ${HOST_IP}
      MODE: LIVE
      PCAP_FILE: ${PACKMATE_PCAP_FILE:-}
      OLD_STREAMS_CLEANUP_ENABLED: ${PACKMATE_OLD_STREAMS_CLEANUP_ENABLED:-true}
      OLD_STREAMS_CLEANUP_INTERVAL: ${PACKMATE_OLD_STREAMS_CLEANUP_INTERVAL:-5}
      OLD_STREAMS_CLEANUP_THRESHOLD: ${PACKMATE_OLD_STREAMS_CLEANUP_THRESHOLD:-240}
    volumes:
      - ${DATA_DIR}/packmate/pcaps:/app/pcaps/:ro
      - ${DATA_DIR}//packmate/rsa_keys/:/app/rsa_keys/:ro
    network_mode: "host"

  packmate-db:
    container_name: packmate-db
    restart: always
    profiles:
      - packmate
      - all
    image: postgres:15.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U packmate -p 65001"]
      interval: 2s
      timeout: 5s
      retries: 15
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${USER}
    volumes:
      - ${DATA_DIR}/packmate:/var/lib/postgresql/data
      - ${PROJECT_DIR}/packmate/db/postgresql.conf:/tmp/postgresql.conf:ro
      - ${PROJECT_DIR}/packmate/db/update_db_config.sh:/docker-entrypoint-initdb.d/_update_db_config.sh:ro
    network_mode: "host"
